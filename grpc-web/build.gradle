apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'de.undercouch.download'

repositories {
  mavenCentral()
}

sourceSets {
  main {
    proto {
      // In addition to the default 'src/main/proto'
      srcDir "${rootDir}/proto"
    }
  }
}

String getGrpcWebUrl() {
  OperatingSystem os = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem
  def baseLocation = 'https://github.com/grpc/grpc-web/releases/download'
  def flavor = ''
  if (os.isLinux()) {
    flavor = 'linux-x86_64'
  } else if (os.isMacOsX()) {
    flavor = 'darwin-x86_64'
  } else if (os.isWindows()) {
    flavor = 'windows-x86_64.exe'
  } else {
    String msg = 'Native grpc-web plugin for protoc is not available for %s.'
    throw new GradleScriptException(String.format(msg, os.getName()), null)
  }

  "${baseLocation}/${depVersion.grpcWeb}/protoc-gen-grpc-web-${depVersion.grpcWeb}-${flavor}"
}

task downloadGrpcWebPlugin(type: Download) {
  src getGrpcWebUrl()
  dest "${buildDir}/grpc-web-native"
  overwrite false
  doLast{
    File file = new File("${buildDir}/grpc-web-native")
    file.setExecutable(true, true)
  }
}

protobuf {
  generatedFilesBaseDir = "$projectDir/src"
  protoc {
    artifact = "${dep.protoc}"
  }
  plugins {
    web {
      path = "${buildDir}/grpc-web-native"
    }
  }
  generateProtoTasks {
    all().each {task ->
      task.dependsOn downloadGrpcWebPlugin
      task.builtins {
        js {
          outputSubDir = 'js'
          option 'import_style=commonjs'
        }
        // If you wish to avoid generating Java files:
        remove java
      }
      task.plugins {
        web {
          outputSubDir = 'js'
          option 'import_style=commonjs'
          option 'mode=grpcwebtext'
        }
      }
    }
  }
}

def cleanGeneratedTask = tasks.register('cleanGenrated', Delete) {
  delete fileTree('src/main/js/').filter { f ->
    f.name.endsWith('_pb.js') ||
    f.name.endsWith('_pb.d.ts') ||
    f.name.endsWith('Pb.ts')
  }
  delete 'src/main/js/dist/main.js'
}

clean.dependsOn cleanGeneratedTask
